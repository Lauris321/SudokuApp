// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SudokuAPI.Entities;
using SudokuAPI.Enumerations;
using System;

namespace SudokuAPI.Migrations
{
    [DbContext(typeof(SudokuInfoContext))]
    partial class SudokuInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SudokuAPI.Entities.Challenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<TimeSpan>("CompletionTime");

                    b.Property<DateTime>("Date");

                    b.Property<int>("Difficulty");

                    b.Property<string>("SudokuGrid")
                        .IsRequired()
                        .HasMaxLength(81);

                    b.HasKey("Id");

                    b.ToTable("Challenges");
                });

            modelBuilder.Entity("SudokuAPI.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChallengeId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Message")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ChallengeId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SudokuAPI.Entities.DailySudoku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int>("Difficulty");

                    b.Property<string>("SudokuGrid")
                        .IsRequired()
                        .HasMaxLength(81);

                    b.HasKey("Id");

                    b.ToTable("DailySudoku");
                });

            modelBuilder.Entity("SudokuAPI.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Authorization");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SudokuAPI.Entities.Comment", b =>
                {
                    b.HasOne("SudokuAPI.Entities.Challenge", "Challenge")
                        .WithMany("CommentsList")
                        .HasForeignKey("ChallengeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
